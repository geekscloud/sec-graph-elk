# 输入配置：接收来自 Filebeat 的日志数据
input {
  beats {
    port => 5044
    # 添加标签，用于后续处理
    tags => ["security_events"]
  }
  
  # 添加 TCP 输入，用于接收其他安全设备发送的日志
  tcp {
    port => 5000
    codec => json
    tags => ["security_events"]
  }
}

# 过滤器配置：对数据进行清洗和转换
filter {
  # 如果数据包含 @timestamp 字段，确保它是正确的日期格式
  if [@timestamp] {
    date {
      match => [ "@timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }

  # 基础字段处理
  mutate {
    # 添加处理时间
    add_field => {
      "processed_at" => "%{@timestamp}"
      "environment" => "production"
    }
    
    # 移除不需要的字段
    remove_field => ["@version", "beat", "input"]
  }

  # 根据事件类型添加标签
  if [event_type] {
    mutate {
      add_tag => ["%{event_type}"]
    }
  }

  # 处理 IP 地址
  if [source_ip] {
    geoip {
      source => "source_ip"
      target => "source_geo"
    }
  }
  
  if [target_ip] {
    geoip {
      source => "target_ip"
      target => "target_geo"
    }
  }
}

# 输出配置：将处理后的数据发送到 Elasticsearch
output {
  # 输出到 Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    user => "elastic"
    password => "elastic123456"
    # 根据事件类型和日期创建索引
    index => "security-events-%{event_type}-%{+YYYY.MM.dd}"
  }
  
  # 调试输出（仅在开发环境使用）
  if [environment] == "development" {
    stdout {
      codec => rubydebug
    }
  }
} 